---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import GlobalLayout from "./GlobalLayout.astro";
import { Picture } from "astro:assets";
import Tags from "../components/Tags.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, short, date, updatedDate, cover, tags } =
  Astro.props;

const dateOptions = { month: "numeric", day: "numeric", year: "numeric" };
const d1 = new Intl.DateTimeFormat("de-DE", dateOptions).format(date);
const d2 = new Intl.DateTimeFormat("de-DE", dateOptions).format(updatedDate);
const showUpdatedDate = d1 != d2;
---

<GlobalLayout title={title} description={short} date={d1}>
  <article>
    <div class="hero-image">
      {cover && <Picture src={cover} alt="Cover image" />}
    </div>
    <div class="prose">
      <div class="title">
        <div class="date">
          <FormattedDate date={date} />
          {
            updatedDate && showUpdatedDate && (
              <div class="last-updated-on">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }

          <Tags tags={tags} />
        </div>
        <h1>{title}</h1>
        <hr />
      </div>
      <slot />
    </div>
  </article>
</GlobalLayout>

<style>
  .date {
    display: flex;
    gap: 1em;
    align-items: baseline;
  }
  .last-updated-on {
    color: var(--color-font-muted);
  }
</style>
